name: Django Package CI/CD

env:
  PYTHON_VERSION: '3.12'
  TWINE_USERNAME: __token__

on:
  push:
    branches:
      [
        main, # Push_case_1
        master, # Push_case_1
        develop, # Push_case_1
        staging, # Push_case_2
        production # Push_case_3
      ]
    paths:
    - django_package_name/**

  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      [
        main, # PR_case_1
        master, # PR_case_1
        develop, # PR_case_1
        staging, # PR_case_2
        production # PR_case_3
      ]
    paths:
    - django_package_name/**

  release:
    types:
      [
        prereleased, # Release_case_1
        released # Release_case_2
      ]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Initial
      id: initial
      uses: ./.github/actions/initial

    - name: Set Environment Variables
      run: |
        echo "should_deploy=${{ steps.initial.outputs.should_deploy }}" >> $GITHUB_ENV
        echo "deployment_stage=${{ steps.initial.outputs.deployment_stage }}" >> $GITHUB_ENV

  # pre-commit-linter:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout Repository
  #     uses: actions/checkout@v4

  #   - name: Pre-Commit Linter
  #     uses: ./.github/actions/pre-commit-linter
  #     with:
  #       python-version: ${{ env.PYTHON_VERSION }}

  # django-pytest-coverage:
  #   runs-on: ubuntu-latest
  #   needs: Pre-Commit-Linter
  #   steps:
  #   - name: Checkout Repository
  #     uses: actions/checkout@v4

  #   - name: PyTest Coverage
  #     uses: ./.github/actions/pytest-coverage
  #     with:
  #       python-version: ${{ env.PYTHON_VERSION }}
  #       codecov-token: ${{ secrets.CODECOV_TOKEN }}

  # django-python-build:
  #   needs: Django-PyTest-Coverage
  #   runs-on: ubuntu-latest
  #   permissions:
  #     packages: write
  #   steps:
  #   - name: Checkout Repository
  #     uses: actions/checkout@v4

  #   - name: Python Build
  #     uses: ./.github/actions/python-build
  #     with:
  #       python-version: ${{ env.PYTHON_VERSION }}
  #       version-name: 'DJANGO_NAME'  # TODO: Update when Have Valiate
